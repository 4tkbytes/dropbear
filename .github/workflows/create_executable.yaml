
name: Build Executables

on:
  push:
    branches: 
    - '**'
  pull_request: {}

jobs:
  build:
    if: contains(github.event.head_commit.message, 'jarvis, run github actions')
    name: Build for ${{ matrix.os_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            os_name: windows-x64
            target: x86_64-pc-windows-msvc
            ext: .exe
            russimp_url: https://github.com/jkvargas/russimp-sys/releases/download/v2.0.3/russimp-2.0.3-x86_64-pc-windows-msvc-dylib.tar.gz
            russimp_file: assimp.dll
          - os: ubuntu-latest
            os_name: linux-x64
            target: x86_64-unknown-linux-gnu
            ext: ""
            russimp_url: https://github.com/jkvargas/russimp-sys/releases/download/v2.0.3/russimp-2.0.3-x86_64-unknown-linux-gnu-dylib.tar.gz
            russimp_file: libassimp.so.5
          - os: macos-latest
            os_name: macos-arm64
            target: aarch64-apple-darwin
            ext: ""
            russimp_url: https://github.com/jkvargas/russimp-sys/releases/download/v2.0.3/russimp-2.0.3-x86_64-apple-darwin-dylib.tar.gz
            russimp_file: libassimp.5.dylib

    steps:
      - uses: actions/checkout@v4

      - name: Install libudev-dev (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libudev-dev

      - name: Install assimp-utils (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y assimp-utils

      - name: Install assimp (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install assimp

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build redback
        run: cargo build --release --package redback --target ${{ matrix.target }}

      - name: Build eucalyptus
        run: cargo build --release --package eucalyptus --target ${{ matrix.target }}


      - name: Download and extract russimp dynamic lib (Windows/Linux)
        if: matrix.os != 'macos-latest' && matrix.russimp_url != ''
        run: |
          curl -L -o russimp.tar.gz ${{ matrix.russimp_url }}
          tar -xzf russimp.tar.gz

      - name: Download README.md from gist (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          curl -L -o README.md https://gist.github.com/4tkbytes/05576d43fa12e7e2331dd7eb4e606bca/raw/README.md

      - name: Prepare artifact
        run: |
          mkdir dist
          cp target/${{ matrix.target }}/release/redback${{ matrix.ext }} dist/
          cp target/${{ matrix.target }}/release/eucalyptus${{ matrix.ext }} dist/
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            cp README.md dist/
          elif [ "${{ matrix.russimp_file }}" != "" ]; then
            find . -name "${{ matrix.russimp_file }}" -exec cp {} dist/ \;
          fi
        shell: bash

      - name: Archive artifact
        run: |
          set -e
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            powershell Compress-Archive -Path dist\* -DestinationPath executables-${{ matrix.os_name }}.zip
          else
            tar -czf executables-${{ matrix.os_name }}.tar.gz -C dist .
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: executables-${{ matrix.os_name }}
          path: |
            executables-${{ matrix.os_name }}.zip
            executables-${{ matrix.os_name }}.tar.gz
