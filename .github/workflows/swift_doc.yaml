name: Generate Swift Documentation

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.swift'
      - '.github/workflows/swift-docs.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - '**/*.swift'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
    
    - name: Install Swift-DocC Plugin
      run: |
        # Install Swift-DocC plugin for documentation generation
        swift package plugin --allow-writing-to-directory docs \
          generate-documentation --target dropbear --disable-indexing \
          --transform-for-static-hosting --hosting-base-path dropbear \
          --output-directory docs || true
        
        # Alternative: Use swift-doc if DocC doesn't work
        if [ ! -d "docs" ] || [ -z "$(ls -A docs)" ]; then
          echo "DocC failed, trying swift-doc..."
          
          # Install swift-doc
          git clone https://github.com/SwiftDocOrg/swift-doc.git
          cd swift-doc
          swift build -c release
          sudo cp .build/release/swift-doc /usr/local/bin/
          cd ..
          
          # Generate documentation with swift-doc
          mkdir -p docs
          find . -name "*.swift" -not -path "./swift-doc/*" | head -20 | while read file; do
            echo "Processing: $file"
            swift-doc generate "$file" --module-name "$(basename $(dirname $file))" --output docs/ --format html || true
          done
        fi
    
    - name: Create index.html if missing
      run: |
        if [ ! -f "docs/index.html" ]; then
          cat > docs/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Dropbear Swift Documentation</title>
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; margin: 40px; }
                h1 { color: #333; }
                .module { margin: 20px 0; padding: 20px; border: 1px solid #ddd; border-radius: 8px; }
                a { color: #007AFF; text-decoration: none; }
                a:hover { text-decoration: underline; }
            </style>
        </head>
        <body>
            <h1>üê® Dropbear Swift Documentation</h1>
            <p>Documentation for Swift scripting in the Dropbear game engine.</p>
            
            <div class="module">
                <h2>Available Documentation</h2>
                <p>Swift documentation files will be listed here once generated.</p>
            </div>
            
            <div class="module">
                <h3>About Dropbear</h3>
                <p>Dropbear is a game engine made in Rust and scripted with Swift. Visit the main repository for more information.</p>
                <a href="https://github.com/4tkbytes/dropbear">GitHub Repository</a>
            </div>
        </body>
        </html>
        EOF
        fi
        
        # List generated files
        echo "Generated documentation files:"
        find docs -name "*.html" -type f || echo "No HTML files found"
    
    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v4

  # Fallback job for manual Swift file documentation
  backup-docs:
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Find and document Swift files
      run: |
        mkdir -p docs
        
        # Create a simple documentation index
        cat > docs/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Dropbear Swift Code</title>
            <style>
                body { font-family: monospace; margin: 40px; }
                .file { margin: 20px 0; padding: 20px; background: #f5f5f5; }
                pre { background: #fff; padding: 15px; overflow-x: auto; }
            </style>
        </head>
        <body>
            <h1>Dropbear Swift Code Documentation</h1>
        EOF
        
        # Find all Swift files and add them to documentation
        find . -name "*.swift" -not -path "./.git/*" | while read file; do
          echo "<div class='file'>" >> docs/index.html
          echo "<h2>$(basename $file)</h2>" >> docs/index.html
          echo "<p>Path: $file</p>" >> docs/index.html
          echo "<pre>" >> docs/index.html
          head -50 "$file" | sed 's/</\&lt;/g; s/>/\&gt;/g' >> docs/index.html
          echo "</pre>" >> docs/index.html
          echo "</div>" >> docs/index.html
        done
        
        echo "</body></html>" >> docs/index.html
        
    - name: Upload backup docs
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs